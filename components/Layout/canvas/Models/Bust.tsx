/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { forwardRef, Ref, useRef } from "react";
import { Float, useGLTF } from "@react-three/drei";
import * as THREE from "three";
import { Color, Depth, Fresnel, LayerMaterial } from "lamina";
import type { Group } from "three";
import { GroupProps } from "@react-three/fiber";
import { mergeRefs } from "utils";

const InnerMaterial = ({ speed = 10, gradient = 0.7 }) => {
  return (
    <LayerMaterial toneMapped={false}>
      <Depth
        colorA="#ff0080"
        colorB="black"
        alpha={1}
        mode="normal"
        near={0.5 * gradient}
        far={0.5}
        origin={[0, 0, 0]}
      />
      <Depth
        colorA="blue"
        colorB="#f7b955"
        alpha={1}
        mode="add"
        near={2 * gradient}
        far={2}
        origin={[1, 1, 1]}
      />
      <Depth
        colorA="green"
        colorB="#f7b955"
        alpha={1}
        mode="add"
        near={3 * gradient}
        far={3}
        origin={[-1, -1, -1]}
      />
      <Depth
        colorA="white"
        colorB="red"
        alpha={1}
        mode="overlay"
        near={1.5 * gradient}
        far={1.5}
        origin={[1, -1, -1]}
      />
      <Fresnel
        mode="add"
        color="white"
        intensity={0.75}
        power={2}
        bias={0.05}
      />
    </LayerMaterial>
  );
};

const black = new THREE.MeshBasicMaterial({
  color: "black",
  toneMapped: false,
});

const white = new THREE.MeshBasicMaterial({
  color: "#fefefe",
  toneMapped: false,
});

const OuterMaterial = new THREE.MeshStandardMaterial({
  color: "#292929",
  roughness: 0,
});

// const OuterMaterial = ({ speed = 10, gradient = 0.7 }) => {
//   return (
//     <LayerMaterial toneMapped={false}>
//       <Color color={"black"} />
//     </LayerMaterial>
//   );
// };

function Model({ ...props }: GroupProps, ref: Ref<Group>) {
  const group = useRef<Group>(null);
  const { nodes } = useGLTF("/bust2/bust.gltf") as any;
  return (
    <group ref={mergeRefs([group, ref])} {...props} dispose={null}>
      <Float>
        <group position={[0.67, 0.79, 0.24]}>
          <mesh
            material={OuterMaterial}
            geometry={nodes.Object_2_cell105.geometry}
          ></mesh>
          <mesh geometry={nodes.Object_2_cell105_1.geometry}>
            <InnerMaterial />
          </mesh>
        </group>
      </Float>
      <Float>
        <group position={[0.59, 3.77, -0.36]}>
          <mesh
            material={OuterMaterial}
            geometry={nodes.Object_2_cell106.geometry}
          ></mesh>
          <mesh geometry={nodes.Object_2_cell106_1.geometry}>
            <InnerMaterial />
          </mesh>
        </group>
      </Float>
      <Float>
        <group position={[-0.36, 5.09, 0.05]}>
          <mesh
            material={OuterMaterial}
            geometry={nodes.Object_2_cell099.geometry}
          ></mesh>
          <mesh geometry={nodes.Object_2_cell099_1.geometry}>
            <InnerMaterial />
          </mesh>
        </group>
      </Float>
      <Float>
        <group position={[-0.18, 3.23, 0.49]}>
          <mesh
            material={OuterMaterial}
            geometry={nodes.Object_2_cell102.geometry}
          ></mesh>
          <mesh geometry={nodes.Object_2_cell102_1.geometry}>
            <InnerMaterial />
          </mesh>
        </group>
      </Float>
      <Float>
        <group position={[-0.54, 1.25, -0.21]}>
          <mesh
            material={OuterMaterial}
            geometry={nodes.Object_2_cell103.geometry}
          ></mesh>
          <mesh geometry={nodes.Object_2_cell103_1.geometry}>
            <InnerMaterial />
          </mesh>
        </group>
      </Float>
    </group>
  );
}

useGLTF.preload("/bust2/bust.gltf");

export default forwardRef(Model);
